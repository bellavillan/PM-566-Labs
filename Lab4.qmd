---
title: "Lab 4"
author: "Isabella Villanueva"
date: 09-27-2024
editor: visual
embed-sources: TRUE
output: html_document
theme: flatly
---

## 1. Read in the data

### First download and then read in the met data

```{r}
if (!file.exists("met_all.gz"))
  download.file(
    url = "https://raw.githubusercontent.com/USCbiostats/data-science-data/master/02_met/met_all.gz",
    destfile = "met_all.gz",
    method   = "libcurl",
    timeout  = 60
    )
met <- data.table::fread("met_all.gz")
met <- as.data.frame(met)
```

## 2. Prepare the data

### Remove temperatures less than -17*°*C. Make sure there are no missing data in the key variables coded as 9999, 999, etc.

```{r}
met <- met[met$temp > -17,]
met$elev[met$elev == 9999.0] <- NA
```

### Generate a date variable using the functions as.Date() (hint: You will need the following to create a date paste(year, month, day, sep = "-")).

### Keep the observations of the first week of the month.

```{r}
met$Date <- as.Date(paste(met$year, met$month, met$day, sep = "-"))
library(lubridate)
met$Week <- week(met$Date)
met <- met[met$Week == 31,]
```

### Compute the mean by station of the variables temp, rh, wind.sp, vis.dist, dew.point, lat, lon, and elev.

```{r}
library(dplyr)
met_avg <- summarize(met,
                       temp = mean(temp),
                       lat = mean(lat),
                       lon = mean(lon),
                       elev = mean(elev),
                       rh = mean(rh), 
                       wind.sp = mean(wind.sp), 
                       vis.dist = mean(vis.dist), 
                       dew.point = mean(dew.point),
                       .by = c(USAFID))
```

### Create a region variable for NW, SW, NE, SE based on lon = -98.00 and lat = 39.71 degrees

```{r}
met$region <- ifelse(met$lon < -98.00 & met$lat > 39.71, "NW",
                ifelse(met$lon < -98.00 & met$lat <= 39.71, "SW",
                ifelse(met$lon >= -98.00 & met$lat > 39.71, "NE",
                ifelse(met$lon >= -98.00 & met$lat <= 39.71, "SE",
                NA))))
```

### Create a categorical variable for elevation as in the lecture slides

```{r}
met$elev_cat <-ifelse(met$elev > 252, "high", "low")
```

## 3. Use `geom_violin` to examine the wind speed and dew point by region

### Wind Speed and Dew Point by Region

```{r}
library(tidyverse)
met <- met[!is.na(met$wind.sp), ]
ggplot(met, aes(x = 1, y = wind.sp)) +
  geom_violin(fill = "pink") +
   facet_wrap(~ region, nrow = 1)
labs(title = "Wind Speed by Region",
  x = "Region",
  y = "Wind Speed") +
theme_minimal()
```

```{r}
library(tidyverse)
met <- met[!is.na(met$dew.point), ]
ggplot(met, aes(x = 1, y = dew.point)) +
geom_violin(fill = "lightblue") +
  facet_wrap(~ region, nrow = 1)
labs(title = "Dew Point by Region",
x = "Region",
y = "Dew Point") +
theme_minimal()
```
## 4. Use `geom_jitter` with `stat_smooth` to examine the association between dew point and wind speed by region

```{r}
library(tidyverse)
met <- met[!is.na(met$region), ]
ggplot(data = met) + 
  geom_jitter(mapping = aes(x = dew.point, y = wind.sp, color = region)) +
geom_smooth(mapping = aes(x = dew.point, y = wind.sp, linetype = region))+
  labs(title = "Association of Dew Point and Wind Speed by Region")
```

## 5. Use `geom_bar` to create barplots of the weather stations by elevation category colored by region
- Bars by elevation category using position="dodge"
- Change colors from the default. Color by region using scale_fill_brewer see this
- Create nice labels on the axes and add a title
- Describe what you observe in the graph
```{r}
library(tidyverse)
met[!is.na(met$elev_cat) & met$elev_cat != "clear"] |>
  ggplot() + 
  geom_bar(mapping = aes(x = elev_cat, fill = region), position = "dodge")+
  scale_fill_brewer(palette = "Pastel1")+
  labs(title = "Weather Station Regions by Elevation Category")
```
## 6. Use `stat_summary` to examine mean dew point and wind speed by region with standard deviation error bars

```{r}
l <- met_avg[!is.na(dew.point) & dew.point != "clear",] |>
  ggplot(met_avg, aes(x = Region, y = `Dew Point`, fill = Region)) +
  stat_summary(fun.data = "mean_sdl", geom = "bar", width = 0.7, position = position_dodge(0.8)) +
  stat_summary(fun.data = "mean_sdl", geom = "errorbar", width = 0.2, position = position_dodge(0.8)) +
  labs(title = "Mean Dew Point by Region with Standard Deviation Error Bars",
       x = "Region",
       y = "Mean Dew Point (°F or °C)") +
  theme_minimal()
```
### 7. Make a map showing the spatial trend in relative humidity in the US

```{r}
library(data.table)
library(leaflet)
rel_hum <- unique(combined_data[, c("rh")])  

leaflet(pm_stations) |> 
  addProviderTiles('CartoDB.Positron') |> 
  addCircles(lat = ~`Site Latitude`, lng = ~`Site Longitude`,
             opacity = 1, fillOpacity = 1, radius = 400, color = c('pink','blue'))
```
```

