---
title: "Lab 4"
author: "Isabella Villanueva"
date: 09-27-2024
editor: visual
embed-sources: TRUE
output: html_document
theme: flatly
---

## 1. Read in the data

### First download and then read in the met data

```{r}
if (!file.exists("met_all.gz"))
  download.file(
    url = "https://raw.githubusercontent.com/USCbiostats/data-science-data/master/02_met/met_all.gz",
    destfile = "met_all.gz",
    method   = "libcurl",
    timeout  = 60
    )
met <- data.table::fread("met_all.gz")
met <- as.data.frame(met)
```

## 2. Prepare the data

### Remove temperatures less than -17*°*C. Make sure there are no missing data in the key variables coded as 9999, 999, etc.

```{r}
met <- met[met$temp > -17,]
met$elev[met$elev == 9999.0] <- NA
```

### Generate a date variable using the functions as.Date() (hint: You will need the following to create a date paste(year, month, day, sep = "-")).

### Keep the observations of the first week of the month.

```{r}
met$Date <- as.Date(paste(met$year, met$month, met$day, sep = "-"))
library(lubridate)
met$Week <- week(met$Date)
met <- met[met$Week == 31,]
```

### Compute the mean by station of the variables temp, rh, wind.sp, vis.dist, dew.point, lat, lon, and elev.

```{r}
library(dplyr)
met_avg <- summarize(met,
                       temp = mean(temp),
                       lat = mean(lat),
                       lon = mean(lon),
                       elev = mean(elev),
                       rh = mean(rh), 
                       wind.sp = mean(wind.sp), 
                       vis.dist = mean(vis.dist), 
                       dew.point = mean(dew.point),
                       .by = c(USAFID))
```

### Create a region variable for NW, SW, NE, SE based on lon = -98.00 and lat = 39.71 degrees

```{r}
met$region <- ifelse(met$lon < -98.00 & met$lat > 39.71, "NW",
                ifelse(met$lon < -98.00 & met$lat <= 39.71, "SW",
                ifelse(met$lon >= -98.00 & met$lat > 39.71, "NE",
                ifelse(met$lon >= -98.00 & met$lat <= 39.71, "SE",
                NA))))
```

### Create a categorical variable for elevation as in the lecture slides

```{r}
met$elev_cat <-ifelse(met$elev > 252, "high", "low")
```

## 3. Use `geom_violin` to examine the wind speed and dew point by region

### Wind Speed and Dew Point by Region

```{r}
library(tidyverse)
met <- met[!is.na(met$wind.sp), ]
ggplot(met, aes(x = 1, y = wind.sp)) +
  geom_violin(fill = "pink") +
   facet_wrap(~ region, nrow = 1)
labs(title = "Wind Speed by Region",
  x = "Region",
  y = "Wind Speed") +
theme_minimal()
```

```{r}
library(tidyverse)
met <- met[!is.na(met$dew.point), ]
ggplot(met, aes(x = 1, y = dew.point)) +
geom_violin(fill = "lightblue") +
  facet_wrap(~ region, nrow = 1)
labs(title = "Dew Point by Region",
x = "Region",
y = "Dew Point") +
theme_minimal()
```

## 4. Use `geom_jitter` with `stat_smooth` to examine the association between dew point and wind speed by region

```{r}
library(tidyverse)
met <- met[!is.na(met$region), ]
ggplot(data = met) + 
  geom_jitter(mapping = aes(x = dew.point, y = wind.sp, color = region)) +
geom_smooth(mapping = aes(x = dew.point, y = wind.sp, linetype = region))+
  labs(title = "Association of Dew Point and Wind Speed by Region")
```

## 5. Use `geom_bar` to create barplots of the weather stations by elevation category colored by region

In this graph, we can observe a high disportionality in the low elevation category in the southeast region, with the second largest number of stations being in the high elevation category in the northeast region. This can point to the lack of equal amount of stations in California to accurately represent the states unique landscape, or it may mean that the state of California has far more locations in lower elevations than higher.

```{r, fig.width=8}
library(tidyverse)
met <- met[!is.na(met$region),]
met <- met[!is.na(met$elev_cat),]
ggplot(met, aes(x = met$elev_cat, fill = met$region))+
  geom_bar(position = "dodge") + scale_fill_brewer(palette = "Pastel1") +
  labs(title = "Weather Station Regions by Elevation Category",
       x = "Elevation Category",
       y = "Number of Stations",
       fill = "region") +
  theme_minimal()
```

## 6. Use `stat_summary` to examine mean dew point and wind speed by region with standard deviation error bars

### Describe the graph and what you observe

For the dew.point graph, we can see that the Northwest region has the largest standard deviation of the mean, where its range varies from \~ 2 to \~ 25. The region with the smallest variability is the southeast region, which has previously been shown to have the most data and the most stations in the state. This can contribute to the accuracy of these readings.

For the wind.sp graph, we can observe a graph that reads two pairs of data that bear great resemblance by region, where the Northeast data and Southeast data have similar ranges and mean values; and the Northwest data and Southwest data have similar ranges and mean values.

The mean value of the data **dew point** has output value for dew point is 18.8.

The mean value of the data **wind speed** has output value for wind speed is 2.1.

```{r}
met <- met[!is.na(met$region),]
met <- met[!is.na(met$dew.point),]
met <- met[!is.na(met$wind.sp),]
l <- met[!is.na(met$region),] |>
  ggplot() +
  stat_summary(mapping = aes(x = region, y = dew.point),
               fun.min = min,
               fun.max = max,
               fun = median, 
               fun.data = mean_sdl)
l
  labs(title = "Mean Dew Point by Region with Standard Deviation Error Bars",
       x = "Region",
       y = "Mean Dew Point (°C)") +
  theme_minimal()
  summarize(met,
            dew.point = mean(dew.point))
```

```{r}
met <- met[!is.na(met$region),]
met <- met[!is.na(met$dew.point),]
met <- met[!is.na(met$wind.sp),]
l <- met[!is.na(met$region),] |>
  ggplot() +
  stat_summary(mapping = aes(x = region, y = wind.sp),
               fun.min = min,
               fun.max = max,
               fun = median, 
               fun.data = mean_sdl)
l
  labs(title = "Mean Wind Speed by Region with Standard Deviation Error Bars",
       x = "Region",
       y = "Mean Wind Speed") +
  theme_minimal()
  summarize(met,
            wind.sp = median(wind.sp))
```

### 7. Make a map showing the spatial trend in relative humidity in the US

```{r}
met <- met[!is.na(met$rh),]
library(leaflet)
met_avg2 <- met[,.(rh = mean(rh, na.rm=TRUE), lat = mean(lat), lon = mean(lon)), by=c("USAFID")]
met_avg2 <- met_avg2[!is.na(rh)]
rh.pal <- colorNumeric(c('lightblue', 'green'), domain = met_avg2$rh)
rh.pal
leaflet(met_avg2) |>
  addProviderTiles('CartoDB.Positron') |> 
  addCircles(lat = ~lat, lng = ~lon,
             opacity = 1, fillOpacity = 1, radius = 400, color = ~ rh.pal(rh))
```
